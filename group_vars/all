# This file defines all kind of global parameters and defaults
---

 # hostsPorts is used to put one service into every agent. It uses host port reservation to ensure this
hostPorts:

    nginx_http:       80
    nginx_ssl:        443

    collectd:         20010
    marathon_lb:      20011

# service ports are defined globally, and used for service discovery
servicePorts:
    influxdb:         30010
    graphite:         30011
    influxdb_admin:   30012

    grafana:          30020

    elasticsearch:     30025
    logstashapi:      30026
    kibana:            30027
    syslog:            30028
    logstash:          30029

    buildbot_www:     30030
    buildbot_worker:  30031
    buildbot_hooks:   30032
    github_hooks:     30033

    postgres:         30040
    neo4j:            30041
    neo4jbolt:        30042
    redis:            30044

    crossbar:         30050

    ngrok:            30060

    artifactory:      30070
    nexus:            30071

    zk_http:          30080

    sota_maria:           30100
    sota_nats:            30101
    sota_device_registry: 30102
    sota_resolver:        30103
    sota_core:            30104
    sota_ldap:            30105
    sota_webserver:       30106


    st_buildbot_www:     30130
    st_buildbot_worker:  30131

    st_postgres:         30140

    st_crossbar:         30150

    st_artifactory:      30170


    ci_perf_buildbot_www:     30230
    ci_perf_buildbot_worker:  30231
    ci_perf_postgres:         30232
    ci_perf_crossbar:         30233

    airflow_mesos_backend:           30234
    airflow_mesos_flower:            30235
    airflow_celery_backend:          30236
    airflow_celery_flower:           30237
    airflow_celery_worker_log:       30238
    airflow_pg:                      30239
    airflow_redis:                   30240

    jupyterhub:               30250

    traefik_admin:            30300
    traefik_http:             30301
    traefik_https:            30302

    api_gateway:              30310
    keycloak:                 30400
    keycloak_pg:              30401


traefik_admin_port:     19050

zk_host: "{{ ansible_env.ZK_HOST }}"
zookeeper_uri: "zk://{{ zk_host }}"
zookeeper_etc_uri: "{{ zookeeper_uri }}/etc"
top_domain: "{{ zk.cloud.top_domain }}"
sub_domain: "{{ zk.cloud.sub_domain }}"
sub_domain:: "{{ zk.cloud.sub_domain: }}"

zookeeper_worker_path: "{{ zookeeper_uri }}/workers/ids/"

docker_ip: "{{  zk.cloud.docker_interface_ip }}"
marathon_num_agents: "5" #{{ zk.cloud.mesos_num_agents}}"

# config files can be downloaded via marathon_uri using this service (see influxdb for an example)
zk_http_url: "http://{{ docker_ip }}:{{ servicePorts.zk_http }}"


marathon_uri: "{{ zk.cloud.marathon_uri }}"

# nixy needs zkhttp provided configuration files, so we need a zkhttp discovered
zk_http_discovered_url: "{{marathon_uri | zk_http_discover}}"

nginx_external_url: "{{ zk.cloud.nginx_external_url }}"
github_status_token:  "{{ zk.secrets.github_status_token }}"

# PG config for buildbot
POSTGRES_USER: "{{ zk.secrets.postgres_user }}"
POSTGRES_PASSWORD: "{{ zk.secrets.postgres_passwd }}"
POSTGRES_DB: "{{ zk.secrets.postgres_db }}"

proxy_env: "{{ zk.proxy_env }}"

basic_http_health_check:
    path: /
    protocol: HTTP
    portIndex: 0
    gracePeriodSeconds: 300
    intervalSeconds: 60
    timeoutSeconds: 20
    maxConsecutiveFailures: 3
    ignoreHttp1xx: false

basic_tcp_health_check:
    protocol: TCP
    portIndex: 0
    gracePeriodSeconds: 300
    intervalSeconds: 60
    timeoutSeconds: 20
    maxConsecutiveFailures: 3

docker_log_driver_parameters:
    - key: log-driver
      value: gelf
    - key: log-opt
      value: "gelf-address=udp://localhost:{{ servicePorts.logstash }}"
    - key: log-opt
      value: "labels={% raw %}{{.ImageName}},{{ (.ExtraAttributes nil).MARATHON_APP_ID }},{{ (.ExtraAttributes nil).MESOS_TASK_ID }},{{ (.ExtraAttributes nil).HOST }},{{ (.ExtraAttributes nil).MARATHON_APP_VERSION }},{{ (.ExtraAttributes nil).MARATHON_APP_DOCKER_IMAGE }}{% endraw %}"
    - key: log-opt
      value: "env=MARATHON_APP_ID,MESOS_TASK_ID,HOST,MARATHON_APP_VERSION,MARATHON_APP_DOCKER_IMAGE"

docker_parameters_run_as_root:
    - key: user
      value: root
